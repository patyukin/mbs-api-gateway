openapi: 3.0.0
info:
  title: API Gateway
  version: 1.0.0
servers:
  - url: http://localhost:5001
paths:
  /v1/sign-up:
    post:
      summary: Register a new user
      operationId: signUpV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/sign-in:
    post:
      summary: User login
      operationId: signInV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                login:
                  type: string
                password:
                  type: string
              required:
                - login
                - password
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensResponse'
        '400':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/refresh-token:
    post:
      summary: Refresh user token
      operationId: refreshTokenV1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
              required:
                - refresh_token
      responses:
        '200':
          description: Token refreshed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokensResponse'
        '400':
          description: Invalid refresh token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /v1/user:
    get:
      summary: Get user profile
      operationId: getUserProfileV1
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

    put:
      summary: Update user profile
      operationId: updateUserProfileV1
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserProfileRequest'
      responses:
        '200':
          description: User profile updated successfully
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    SignUpRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          format: password
        telegram_login:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        patronymic:
          type: string
        date_of_birth:
          type: string
          format: date
        phone:
          type: string
        address:
          type: string
      required:
        - email
        - password
        - telegram_login
        - first_name
        - last_name
        - patronymic
        - date_of_birth
        - phone
        - address

    TokensResponse:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string

    UserProfileResponse:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        patronymic:
          type: string
        date_of_birth:
          type: string
          format: date
        email:
          type: string
          format: email
        phone:
          type: string
        address:
          type: string

    UpdateUserProfileRequest:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        patronymic:
          type: string
        date_of_birth:
          type: string
          format: date
        address:
          type: string
      required:
        - first_name
        - last_name
        - patronymic
        - date_of_birth
        - address

    ErrorResponse:
      type: object
      properties:
        error:
          type: string